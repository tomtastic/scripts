#!/usr/bin/env perl
# 29/08/2017 - TRCM - Convert timediff to a generalised command line tool
# eg.
# ./datediff 2017/07/06 2017/08/29
# 54
# ./datediff 2017/08/29 2017/07/06
# -54
use warnings;
use strict;
use Time::Piece;

if ($#ARGV+1 < 2) { die("Supply two dates in YYYY/mm/dd format.\n") }

# Time::Piece will complain about bad strings to STDERR
# Catch any such complaints and provide our nicer error message
eval {
    my $time_piece_sucks;
    local *STDERR;
    open STDERR, '>', \$time_piece_sucks;
    Time::Piece->strptime($ARGV[0], "%Y/%m/%d");
    Time::Piece->strptime($ARGV[1], "%Y/%m/%d");
    die if ($time_piece_sucks);
    1; #Â lets return true if strptime didnt kill us
} or do {
    die ("Supply two dates in YYYY/mm/dd format.\n");
};
my $dateA = Time::Piece->strptime($ARGV[0], "%Y/%m/%d");
my $dateB = Time::Piece->strptime($ARGV[1], "%Y/%m/%d");
my $diff;

if ( $dateA != $dateB ) {
    $diff=$dateB-$dateA;
    printf("%d\n",$diff->days);
} else {
    printf("0\n");
}
