#!/usr/bin/env perl
# Print all values for unique keys
#           key_b,value2
#           key_a,value1
#           key_b,value1
#           key_b,value3
# Generate :
#           key_a,value1
#           key_b,value1,value2,value3

# 2014/04/28 - TRCM

my $csv=$ARGV[0];
my %values;

open (my $csvfh, '<', $csv) or die "$! - oops!\n";
while (defined (my $line= <$csvfh>)) {
    next if $line =~ /^#/; # skip comments
    next if $line =~ /^$/; # skip blank lines
    #chomp $line;
    # portable chomp, because sometimes chomp just sucks
    $line =~ s/\015?\012?$//;
    my ($key,$value) = split /,/,$line;
    if (! exists $values{$key}) {
       # Create new anonymous array ref for values
       $values{$key}=[$value];
    }
    else {
       push @{$values{$key}},$value;
    }
}

foreach my $key (sort keys %values) {
    # Dereference the array stored in the hash value before we try to print it
    printf("%s,%s\n",$key,join(",",sort @{$values{$key}}));
}
